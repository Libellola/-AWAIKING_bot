import os
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums.chat_member_status import ChatMemberStatus

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHANNEL = os.getenv("TELEGRAM_CHANNEL_ID")  # @username –∏–ª–∏ -100...

bot = Bot(BOT_TOKEN)
dp = Dispatcher()

WELCOME = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üåô\n\n"
    "–≠—Ç–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ AWAIKING BOT ‚Äî –∑–¥–µ—Å—å –ø—Ä–∞–∫—Ç–∏–∫–∏, –º—è–≥–∫–∞—è —Å–∏–ª–∞ –∏ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ.\n"
    "–®–∞–≥ 1: –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –Ω–∏–∂–µ, –≤–µ—Ä–Ω–∏—Å—å –∏ –Ω–∞–∂–º–∏ ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª.\n"
    "–®–∞–≥ 2: –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç ‚Äî üìò –ì–∞–π–¥ –∏–ª–∏ üé• –í–∏–¥–µ–æ+–ì–∞–π–¥.\n"
)

def kb_sub():
    kb = InlineKeyboardBuilder()
    url = f"https://t.me/{CHANNEL.replace('@','')}" if CHANNEL and CHANNEL.startswith('@') else "https://t.me/"
    kb.button(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=url)
    kb.button(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
    kb.button(text="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", callback_data="open_menu")
    kb.adjust(1)
    return kb.as_markup()

def kb_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="üìò –ì–∞–π–¥ ‚Äî 490‚ÇΩ", callback_data="buy:guide")
    kb.button(text="üé• –í–∏–¥–µ–æ+–ì–∞–π–¥ ‚Äî 990‚ÇΩ", callback_data="buy:video")
    kb.adjust(1)
    return kb.as_markup()

def kb_pay(link: str | None = None):
    kb = InlineKeyboardBuilder()
    if link:
        kb.button(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=link)
    kb.button(text="–Ø –æ–ø–ª–∞—Ç–∏–ª–∞", callback_data="paid_check")
    kb.button(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="open_menu")
    kb.adjust(1)
    return kb.as_markup()

@dp.message(CommandStart())
async def start(m: Message):
    await m.answer(WELCOME, reply_markup=kb_sub())

@dp.callback_query(F.data == "check_sub")
async def check_sub(c: CallbackQuery):
    try:
        member = await bot.get_chat_member(CHANNEL, c.from_user.id)
        ok = member.status in (ChatMemberStatus.MEMBER, ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR)
    except Exception:
        ok = False
    if ok:
        await c.message.edit_text("–ü–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—å ‚úÖ\n–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=kb_menu())
    else:
        await c.message.edit_text("–ü–æ—Ö–æ–∂–µ, –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–∫–∞ –Ω–µ—Ç ü§ç\n–ù–∞–∂–º–∏ ¬´–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è¬ª, –∑–∞—Ç–µ–º ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª.", reply_markup=kb_sub())
    await c.answer()

@dp.callback_query(F.data == "open_menu")
async def open_menu(c: CallbackQuery):
    await c.message.edit_text("–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=kb_menu())
    await c.answer()

@dp.callback_query(F.data.startswith("buy:"))
async def buy(c: CallbackQuery):
    product = c.data.split(":")[1]
    price = 490 if product == "guide" else 990
    fake_url = "https://yookassa.ru/"   # –∑–∞–≥–ª—É—à–∫–∞, –ø–æ–¥–∫–ª—é—á–∏–º –ø–æ–∑–∂–µ
    await c.message.edit_text(
        f"–ö –æ–ø–ª–∞—Ç–µ: {'üìò –ì–∞–π–¥' if product=='guide' else 'üé• –í–∏–¥–µ–æ+–ì–∞–π–¥'} ‚Äî {price}‚ÇΩ\n\n"
        "–û—Ç–∫—Ä–æ–π —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ –≤–µ—Ä–Ω–∏—Å—å —Å—é–¥–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏ ¬´–Ø –æ–ø–ª–∞—Ç–∏–ª–∞¬ª.",
        reply_markup=kb_pay(fake_url)
    )
    await c.answer()

@dp.callback_query(F.data == "paid_check")
async def paid_check(c: CallbackQuery):
    doc = os.getenv("DOC_URL", "https://docs.google.com/")
    tilda = os.getenv("TILDA_PAGE_URL", "https://tilda.cc/")
    pwd = os.getenv("TILDA_PAGE_PASSWORD", "PASSWORD")
    await c.message.edit_text(
        "‚ú® –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!\n\n"
        f"üé• –í–∏–¥–µ–æ (–ø–æ–¥ –ø–∞—Ä–æ–ª–µ–º):\n{tilda}\n–ü–∞—Ä–æ–ª—å: {pwd}\n\n"
        f"üìò –ì–∞–π–¥ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä):\n{doc}\n\n"
        "–ü—É—Å—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ –º—è–≥–∫–æ –≤–µ–¥—ë—Ç —Ç–µ–±—è üå∏"
    )
    await c.answer()

if __name__ == "__main__":
    import asyncio
    dp.run_polling(bot)
